Import module
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Raise TypeError if elements of the matrix are not floats or integers
>>> matrix = [
...		[1, "c", 3],
...		[1, 5, 3]
...	]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Raise TypeError if arrays in the matrix are not of the same size
>>> matrix = [
...		[1, 5, 3],
...		[1, 5, 3, 8]
...	]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

Raise TypeError if div is not an integer or a float
>>> matrix = [
...		[1, 5, 3, 9],
...		[1, 5, 3, 8]
...	]

>>> matrix_divided(matrix, "a")
Traceback (most recent call last):
	...
TypeError: div must be a number

Raise ZeroDivisionError if div is 0
>>> matrix = [
...		[1, 5, 3, 9],
...		[1, 5, 3, 8]
...	]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Divide numbers
>>> matrix = [
... 	[2, 4, 6],
... 	[1, 3, 5]
...	]

>>> divided_matrix = matrix_divided(matrix, 2)
>>> print(divided_matrix)
[[1.0, 2.0, 3.0], [0.5, 1.5, 2.5]]

Divide numbers
>>> matrix = [
... 	[2, 4, 6],
... 	[1, 3, 5]
...	]

>>> divided_matrix = matrix_divided(matrix, 3)
>>> print(divided_matrix)
[[0.67, 1.33, 2.0], [0.33, 1.0, 1.67]]

